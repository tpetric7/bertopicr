distinct(Representative_Docs) |>
pull()
names(topic_info_df)
topic_info_df |>
filter(Topic == 0) |>
select(Representative_Docs)
topic_info_df |>
filter(Topic == 0) |>
select(Representative_Docs) |>
pull()
head(topics_df, 30)
library(ggplot2)
barchart <- topics_df |>
filter(Topic >= 0 & Topic <= 8) |>
ggplot(aes(Score, Word, fill = Topic)) +
geom_col(show.legend = FALSE)
library(plotly)
ggplotly(barchart)
#| eval: false
library(ggplot2)
barchart <- topics_df |>
filter(Topic >= 0 & Topic <= 8) |>
ggplot(aes(Score, Word, fill = Topic)) +
geom_col(show.legend = FALSE) +
facet_wrap(~ Topic)
library(plotly)
ggplotly(barchart)
#| eval: false
library(ggplot2)
barchart <- topics_df |>
group_by(Topic) |>
filter(Topic >= 0 & Topic <= 8) |>
ggplot(aes(Score, Word, fill = Topic)) +
geom_col(show.legend = FALSE) +
facet_wrap(~ Topic)
library(plotly)
ggplotly(barchart)
#| eval: false
library(ggplot2)
barchart <- topics_df |>
group_by(Topic) |>
filter(Topic >= 0 & Topic <= 8) |>
ggplot(aes(Score, Word, fill = Topic)) +
geom_col(show.legend = FALSE) +
facet_wrap(~ Topic, scales = "free_y")
library(plotly)
ggplotly(barchart)
#| eval: false
library(ggplot2)
barchart <- topics_df |>
group_by(Topic) |>
filter(Topic >= 0 & Topic <= 8) |>
mutate(Word = reorder(Word, Score)) |>
ggplot(aes(Score, Word, fill = Topic)) +
geom_col(show.legend = FALSE) +
facet_wrap(~ Topic, scales = "free_y")
library(plotly)
ggplotly(barchart)
#| eval: false
library(ggplot2)
barchart <- topics_df |>
group_by(Topic) |>
filter(Topic >= 0 & Topic <= 8) |>
mutate(Word = reorder(Word, Score)) |>
ggplot(aes(Score, Word, fill = Topic)) +
geom_col(show.legend = FALSE) +
facet_wrap(~ Topic, scales = "free")
library(plotly)
ggplotly(barchart)
#| eval: false
library(ggplot2)
barchart <- topics_df |>
group_by(Topic) |>
filter(Topic >= 0 & Topic <= 8) |>
slice_head(n=5) |>
mutate(Word = reorder(Word, Score)) |>
ggplot(aes(Score, Word, fill = Topic)) +
geom_col(show.legend = FALSE) +
facet_wrap(~ Topic, scales = "free")
library(plotly)
ggplotly(barchart)
#| eval: false
library(ggplot2)
barchart <- topics_df |>
group_by(Topic) |>
filter(Topic >= 0 & Topic <= 8) |>
slice_head(n=5) |>
mutate(Word = reorder(Word, Score)) |>
ggplot(aes(Score, Word)) +
geom_col(fill = Topic, show.legend = FALSE) +
facet_wrap(~ Topic, scales = "free")
#| eval: false
library(ggplot2)
barchart <- topics_df |>
group_by(Topic) |>
filter(Topic >= 0 & Topic <= 8) |>
slice_head(n=5) |>
mutate(Word = reorder(Word, Score)) |>
ggplot(aes(Score, Word, fill = Topic)) +
geom_col(show.legend = FALSE) +
facet_wrap(~ Topic, scales = "free")
library(plotly)
ggplotly(barchart)
#| eval: false
library(ggplot2)
barchart <- topics_df |>
group_by(Topic) |>
filter(Topic >= 0 & Topic <= 8) |>
slice_head(n=5) |>
mutate(Word = reorder(Word, Score)) |>
ggplot(aes(Score, Word, fill = Topic)) +
geom_col() +
facet_wrap(~ Topic, scales = "free")
library(plotly)
ggplotly(barchart)
#| eval: false
library(ggplot2)
barchart <- topics_df |>
group_by(Topic) |>
filter(Topic >= 0 & Topic <= 8) |>
slice_head(n=5) |>
mutate(Topic = paste("Topic", as.character(Topic)),
Word = reorder(Word, Score)) |>
ggplot(aes(Score, Word, fill = Topic)) +
geom_col(show.legend = FALSE) +
facet_wrap(~ Topic, scales = "free")
library(plotly)
ggplotly(barchart)
#| eval: false
library(ggplot2)
barchart <- topics_df |>
group_by(Topic) |>
filter(Topic >= 0 & Topic <= 8) |>
slice_head(n=5) |>
mutate(Topic = paste("Topic", as.character(Topic)),
Word = reorder(Word, Score)) |>
ggplot(aes(Score, Word, fill = Topic)) +
geom_col(show.legend = FALSE) +
facet_wrap(~ Topic, scales = "free")
library(plotly)
ggplotly(barchart)
#| eval: false
library(ggplot2)
barchart <- topics_df |>
group_by(Topic) |>
filter(Topic >= 0 & Topic <= 8) |>
slice_head(n=5) |>
mutate(Topic = paste("Topic", as.character(Topic)),
Word = reorder(Word, Score)) |>
ggplot(aes(Score, Word, fill = Topic)) +
geom_col() +
facet_wrap(~ Topic, scales = "free") +
theme(legend.position = "none")
library(plotly)
ggplotly(barchart)
source("visualize_distribution.R")
source("R/visualize_distribution.R")
# default filename: topic_dist_interactive.html
visualize_distribution(model = topic_model,
text_id = 1, # user input
probabilities = probs, # see model training
filename = "topic_dist_interactive",
auto_open = TRUE)
source("R/visualize_distribution.R")
# default filename: topic_dist_interactive.html
visualize_distribution(model = topic_model,
text_id = 1, # user input
probabilities = probs, # see model training
filename = "topic_dist_interactive",
auto_open = TRUE)
source("R/visualize_barchart.R")
visualize_barchart(model = topic_model,
filename = "topics_topwords_interactive_barchart", # default
open_file = FALSE) # TRUE enables output in browser
visualize_barchart(model = topic_model,
filename = "topics_topwords_interactive_barchart", # default
open_file = T) # TRUE enables output in browser
source("R/visualize_topics.R")
visualize_topics(model = topic_model,
filename = "intertopic_distance_map", # default name
auto_open = TRUE) # TRUE enables output in browser
visualize_topics(model = topic_model,
filename = "intertopic_distance_map", # default name
auto_open = FALSE) # TRUE enables output in browser
visualize_heatmap(model = topic_model, filename = "topics_similarity_heatmap", auto_open = FALSE)
source("visualize_heatmap.R")
source("R/visualize_heatmap.R")
visualize_heatmap(model = topic_model, filename = "topics_similarity_heatmap", auto_open = FALSE)
visualize_heatmap(model = topic_model, filename = "topics_similarity_heatmap", auto_open = TRUE)
visualize_heatmap(model = topic_model, filename = "topics_similarity_heatmap", auto_open = FALSE)
source("R/visualize_documents_3d.R")
visualize_documents_3d(model = topic_model,
texts = texts_cleaned,
reduced_embeddings = embeddings,
custom_labels = FALSE,
hide_annotation = TRUE,
tooltips = c("Topic", "Name", "Count", "Text"),
filename = "visualize_documents_3d",
auto_open = FALSE)
source("R/visualize_documents_3d.R")
visualize_documents_3d(model = topic_model,
texts = texts_cleaned,
reduced_embeddings = reduced_embeddings,
custom_labels = FALSE,
hide_annotation = TRUE,
tooltips = c("Topic", "Name", "Count", "Text"),
filename = "visualize_documents_3d",
auto_open = FALSE)
# Reduce dimensionality of embeddings using UMAP
reduced_embeddings <- umap$UMAP(n_neighbors = 10L, n_components = 2L, min_dist = 0.0, metric = 'cosine')$fit_transform(embeddings)
visualize_documents_3d(model = topic_model,
texts = texts_cleaned,
reduced_embeddings = reduced_embeddings,
custom_labels = FALSE,
hide_annotation = TRUE,
tooltips = c("Topic", "Name", "Count", "Text"),
filename = "visualize_documents_3d",
auto_open = FALSE)
visualize_documents_3d(model = topic_model,
texts = texts_cleaned,
reduced_embeddings = embeddings,
custom_labels = FALSE,
hide_annotation = TRUE,
tooltips = c("Topic", "Name", "Count", "Text"),
filename = "visualize_documents_3d",
auto_open = FALSE)
# Use UMAP to reduce embeddings to 3D
fit <- UMAP(n_neighbors=15L, n_components=3L, min_dist=0.0, metric='cosine', random_state=42L)
reduced_embeddings <- fit$fit_transform(embeddings) # original high-dimensional embeddings
visualize_documents_3d(model = topic_model,
texts = texts_cleaned,
reduced_embeddings = embeddings,
custom_labels = FALSE,
hide_annotation = TRUE,
tooltips = c("Topic", "Name", "Count", "Text"),
filename = "visualize_documents_3d",
auto_open = FALSE)
# Use UMAP to reduce embeddings to 3D
fit <- UMAP(n_neighbors=10L, n_components=2L, min_dist=0.0, metric='cosine', random_state=42L)
reduced_embeddings <- fit$fit_transform(embeddings) # original high-dimensional embeddings
visualize_documents_3d(model = topic_model,
texts = texts_cleaned,
reduced_embeddings = embeddings,
custom_labels = FALSE,
hide_annotation = TRUE,
tooltips = c("Topic", "Name", "Count", "Text"),
filename = "visualize_documents_3d",
auto_open = FALSE)
visualize_documents_3d(model = topic_model,
texts = texts_cleaned,
reduced_embeddings = reduced_embeddings,
custom_labels = FALSE,
hide_annotation = TRUE,
tooltips = c("Topic", "Name", "Count", "Text"),
filename = "visualize_documents_3d",
auto_open = FALSE)
reduced_embeddings <- umap$UMAP(n_neighbors = 10L, n_components = 2L, min_dist = 0.0, metric = 'cosine')$fit_transform(embeddings)
visualize_documents_3d(model = topic_model,
texts = texts_cleaned,
reduced_embeddings = reduced_embeddings,
custom_labels = FALSE,
hide_annotation = TRUE,
tooltips = c("Topic", "Name", "Count", "Text"),
filename = "visualize_documents_3d",
auto_open = FALSE)
# Reduce dimensionality of embeddings using UMAP
reduced_embeddings <- umap$UMAP(n_neighbors = 5L, n_components = 2L, min_dist = 0.0, metric = 'cosine')$fit_transform(embeddings)
visualize_documents_3d(model = topic_model,
texts = texts_cleaned,
reduced_embeddings = reduced_embeddings,
custom_labels = FALSE,
hide_annotation = TRUE,
tooltips = c("Topic", "Name", "Count", "Text"),
filename = "visualize_documents_3d",
auto_open = FALSE)
# Reduce dimensionality of embeddings using UMAP
reduced_embeddings <- umap$UMAP(n_neighbors = 2L, n_components = 2L, min_dist = 0.0, metric = 'cosine')$fit_transform(embeddings)
visualize_documents_3d(model = topic_model,
texts = texts_cleaned,
reduced_embeddings = reduced_embeddings,
custom_labels = FALSE,
hide_annotation = TRUE,
tooltips = c("Topic", "Name", "Count", "Text"),
filename = "visualize_documents_3d",
auto_open = FALSE)
# Reduce dimensionality of embeddings using UMAP
reduced_embeddings <- umap$UMAP(n_neighbors = 5L, n_components = 1L, min_dist = 0.0, metric = 'cosine')$fit_transform(embeddings)
visualize_documents_3d(model = topic_model,
texts = texts_cleaned,
reduced_embeddings = reduced_embeddings,
custom_labels = FALSE,
hide_annotation = TRUE,
tooltips = c("Topic", "Name", "Count", "Text"),
filename = "visualize_documents_3d",
auto_open = FALSE)
# Use UMAP to reduce embeddings to 3D
fit <- UMAP(n_neighbors=5L, n_components=2L, min_dist=0.0, metric='cosine', random_state=42L)
reduced_embeddings <- fit$fit_transform(embeddings) # original high-dimensional embeddings
visualize_documents_3d(model = topic_model,
texts = texts_cleaned,
reduced_embeddings = reduced_embeddings,
custom_labels = FALSE,
hide_annotation = TRUE,
tooltips = c("Topic", "Name", "Count", "Text"),
filename = "visualize_documents_3d",
auto_open = FALSE)
visualize_documents_3d(model = topic_model,
texts = texts_cleaned,
reduced_embeddings = embeddings,
custom_labels = FALSE,
hide_annotation = TRUE,
tooltips = c("Topic", "Name", "Count", "Text"),
filename = "visualize_documents_3d",
auto_open = FALSE)
source("R/visualize_documents_3d.R")
visualize_documents_3d(model = topic_model,
texts = texts_cleaned,
reduced_embeddings = embeddings,
custom_labels = FALSE,
hide_annotation = TRUE,
tooltips = c("Topic", "Name", "Count", "Text"),
filename = "visualize_documents_3d",
auto_open = FALSE)
source("R/visualize_documents_3d.R")
visualize_documents_3d(model = topic_model,
texts = texts_cleaned,
reduced_embeddings = embeddings,
custom_labels = FALSE,
hide_annotation = TRUE,
tooltips = c("Topic", "Name", "Count", "Text"),
filename = "visualize_documents_3d",
auto_open = FALSE)
source("R/visualize_documents_3d.R")
visualize_documents_3d(model = topic_model,
texts = texts_cleaned,
reduced_embeddings = embeddings,
custom_labels = FALSE,
hide_annotation = TRUE,
tooltips = c("Topic", "Name", "Probability", "Text"),
filename = "visualize_documents_3d",
auto_open = FALSE)
source("R/visualize_documents_3d.R")
visualize_documents_3d(model = topic_model,
texts = texts_cleaned,
reduced_embeddings = embeddings,
custom_labels = FALSE,
hide_annotation = TRUE,
tooltips = c("Topic", "Name", "Probability", "Text"),
filename = "visualize_documents_3d",
auto_open = FALSE)
source("R/visualize_documents_3d.R")
visualize_documents_3d(model = topic_model,
texts = texts_cleaned,
reduced_embeddings = embeddings,
custom_labels = FALSE,
hide_annotation = TRUE,
tooltips = c("Topic", "Name", "Probability", "Text"),
filename = "visualize_documents_3d",
auto_open = FALSE)
# Reduce dimensionality of embeddings using UMAP
reduced_embeddings <- umap$UMAP(n_neighbors = 2L, n_components = 2L, min_dist = 0.0, metric = 'cosine')$fit_transform(embeddings)
visualize_documents_3d(model = topic_model,
texts = texts_cleaned,
reduced_embeddings = reduced_embeddings,
custom_labels = FALSE,
hide_annotation = TRUE,
tooltips = c("Topic", "Name", "Probability", "Text"),
filename = "visualize_documents_3d",
auto_open = FALSE)
source("R/visualize_documents_3d.R")
# Reduce dimensionality of embeddings using UMAP
reduced_embeddings <- umap$UMAP(n_neighbors = 10L, n_components = 3L, min_dist = 0.0, metric = 'cosine')$fit_transform(embeddings)
visualize_documents_3d(model = topic_model,
texts = texts_cleaned,
reduced_embeddings = reduced_embeddings,
custom_labels = FALSE,
hide_annotation = TRUE,
tooltips = c("Topic", "Name", "Probability", "Text"),
filename = "visualize_documents_3d",
auto_open = FALSE)
source("R/visualize_documents_3d.R")
# Reduce dimensionality of embeddings using UMAP
reduced_embeddings <- umap$UMAP(n_neighbors = 10L, n_components = 3L, min_dist = 0.0, metric = 'cosine')$fit_transform(embeddings)
visualize_documents_3d(model = topic_model,
texts = texts_cleaned,
reduced_embeddings = reduced_embeddings,
custom_labels = FALSE,
hide_annotation = TRUE,
tooltips = c("Topic", "Name", "Probability", "Text"),
filename = "visualize_documents_3d",
auto_open = FALSE)
source("R/visualize_documents_3d.R")
# Reduce dimensionality of embeddings using UMAP
reduced_embeddings <- umap$UMAP(n_neighbors = 10L, n_components = 3L, min_dist = 0.0, metric = 'cosine')$fit_transform(embeddings)
visualize_documents_3d(model = topic_model,
texts = texts_cleaned,
reduced_embeddings = reduced_embeddings,
custom_labels = FALSE,
hide_annotation = TRUE,
tooltips = c("Topic", "Name", "Probability", "Text"),
filename = "visualize_documents_3d",
auto_open = FALSE)
source("R/visualize_documents_3d.R")
# Reduce dimensionality of embeddings using UMAP
reduced_embeddings <- umap$UMAP(n_neighbors = 10L, n_components = 3L, min_dist = 0.0, metric = 'cosine')$fit_transform(embeddings)
visualize_documents_3d(model = topic_model,
texts = texts_cleaned,
reduced_embeddings = reduced_embeddings,
custom_labels = FALSE,
hide_annotation = TRUE,
tooltips = c("Topic", "Name", "Probability", "Text"),
filename = "visualize_documents_3d",
auto_open = FALSE)
source("R/visualize_documents_3d.R")
# Reduce dimensionality of embeddings using UMAP
reduced_embeddings <- umap$UMAP(n_neighbors = 10L, n_components = 3L, min_dist = 0.0, metric = 'cosine')$fit_transform(embeddings)
visualize_documents_3d(model = topic_model,
texts = texts_cleaned,
reduced_embeddings = reduced_embeddings,
custom_labels = FALSE,
hide_annotation = TRUE,
tooltips = c("Topic", "Name", "Probability", "Text"),
filename = "visualize_documents_3d",
auto_open = FALSE)
source("R/visualize_documents_3d.R")
# Reduce dimensionality of embeddings using UMAP
reduced_embeddings <- umap$UMAP(n_neighbors = 10L, n_components = 3L, min_dist = 0.0, metric = 'cosine')$fit_transform(embeddings)
visualize_documents_3d(model = topic_model,
texts = texts_cleaned,
reduced_embeddings = reduced_embeddings,
custom_labels = FALSE,
hide_annotation = TRUE,
tooltips = c("Topic", "Name", "Probability", "Text"),
filename = "visualize_documents_3d",
auto_open = FALSE)
source("R/visualize_documents_3d.R")
# Reduce dimensionality of embeddings using UMAP
reduced_embeddings <- umap$UMAP(n_neighbors = 10L, n_components = 3L, min_dist = 0.0, metric = 'cosine')$fit_transform(embeddings)
visualize_documents_3d(model = topic_model,
texts = texts_cleaned,
reduced_embeddings = reduced_embeddings,
custom_labels = FALSE,
hide_annotation = TRUE,
tooltips = c("Topic", "Name", "Probability", "Text"),
filename = "visualize_documents_3d",
auto_open = FALSE)
source("R/visualize_documents_3d.R")
# Reduce dimensionality of embeddings using UMAP
reduced_embeddings <- umap$UMAP(n_neighbors = 10L, n_components = 3L, min_dist = 0.0, metric = 'cosine')$fit_transform(embeddings)
visualize_documents_3d(model = topic_model,
texts = texts_cleaned,
reduced_embeddings = reduced_embeddings,
custom_labels = FALSE,
hide_annotation = TRUE,
tooltips = c("Topic", "Name", "Probability", "Text"),
filename = "visualize_documents_3d",
auto_open = FALSE)
source("R/visualize_documents_3d.R")
# Reduce dimensionality of embeddings using UMAP
reduced_embeddings <- umap$UMAP(n_neighbors = 10L, n_components = 3L, min_dist = 0.0, metric = 'cosine')$fit_transform(embeddings)
visualize_documents_3d(model = topic_model,
texts = texts_cleaned,
reduced_embeddings = reduced_embeddings,
custom_labels = FALSE,
hide_annotation = TRUE,
tooltips = c("Topic", "Name", "Probability", "Text"),
filename = "visualize_documents_3d",
auto_open = FALSE)
source("R/visualize_documents_3d.R")
# Reduce dimensionality of embeddings using UMAP
reduced_embeddings <- umap$UMAP(n_neighbors = 10L, n_components = 3L, min_dist = 0.0, metric = 'cosine')$fit_transform(embeddings)
visualize_documents_3d(model = topic_model,
texts = texts_cleaned,
reduced_embeddings = reduced_embeddings,
custom_labels = FALSE,
hide_annotation = TRUE,
tooltips = c("Topic", "Name", "Probability", "Text"),
filename = "visualize_documents_3d",
auto_open = FALSE)
source("R/visualize_documents_3d.R")
# Reduce dimensionality of embeddings using UMAP
reduced_embeddings <- umap$UMAP(n_neighbors = 10L, n_components = 3L, min_dist = 0.0, metric = 'cosine')$fit_transform(embeddings)
visualize_documents_3d(model = topic_model,
texts = texts_cleaned,
reduced_embeddings = reduced_embeddings,
custom_labels = FALSE,
hide_annotation = TRUE,
tooltips = c("Topic", "Name", "Probability", "Text"),
filename = "visualize_documents_3d",
auto_open = FALSE)
library(roxygen2)
library(usethis)
roxygenize()
roxygenize()
roxygenize()
devtools::check()
devtools::check()
devtools::build()
library(roxygen2)
roxygenize()
devtools::load_all()
devtools::check()
devtools::document()
devtools::build()
devtools::install()
library(usethis)
library(roxygen2)
roxygenise()
devtools::document()
devtools::build()
devtools::install()
library(bertopicr)
